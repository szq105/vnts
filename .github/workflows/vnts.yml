name: 编译压缩版vnts

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  TZ: Asia/Shanghai
  
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.getversion.outputs.ver }}
      cver: ${{ steps.getversion.outputs.cver }}
    steps:
      - name: 检查更新
        id: getversion
        run: |
          ver=`curl -s https://api.github.com/repos/vnt-dev/vnts/releases/latest | jq -r '.tag_name'`
          cver=`curl -s https://api.github.com/repos/lmq8267/vnts/releases/latest | jq -r '.tag_name'`
          echo "ver=${ver}" >> $GITHUB_OUTPUT
          echo "cver=${cver}" >> $GITHUB_OUTPUT
  build:
    needs: check
    if: ${{ needs.check.outputs.ver != needs.check.outputs.cver }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - TARGET: aarch64-unknown-linux-musl
            OS: ubuntu-latest
            FEATURES: normal,web,wg
            STRIP: aarch64-linux-musl-strip
          - TARGET: armv7-unknown-linux-musleabihf
            OS: ubuntu-latest
            FEATURES: normal,web,wg
            STRIP: armv7l-linux-musleabihf-strip
          - TARGET: armv7-unknown-linux-musleabi
            OS: ubuntu-latest
            FEATURES: normal,web,wg
            STRIP: armv7m-linux-musleabi-strip
          - TARGET: arm-unknown-linux-musleabihf
            OS: ubuntu-latest
            FEATURES: normal,web,wg
            STRIP: arm-linux-musleabihf-strip
          - TARGET: arm-unknown-linux-musleabi
            OS: ubuntu-latest
            FEATURES: normal,web,wg
            STRIP: arm-linux-musleabi-strip
          - TARGET: mipsel-unknown-linux-musl
            OS: ubuntu-latest
            FEATURES: normal,web,wg
            STRIP: mipsel-linux-musl-strip
          - TARGET: mips-unknown-linux-musl
            OS: ubuntu-latest
            FEATURES: normal,wg
            STRIP: mips-linux-musl-strip
          - TARGET: x86_64-unknown-linux-musl
            OS: ubuntu-latest
            FEATURES: normal,web,wg
            STRIP: strip
          - TARGET: x86_64-unknown-freebsd
            OS: ubuntu-latest
            FEATURES: normal,web,wg
    runs-on: ${{ matrix.OS }}
    env:
      NAME: vnts_${{ matrix.TARGET }}
      TARGET: ${{ matrix.TARGET }}
      OS: ${{ matrix.OS }}
      STRIP: ${{ matrix.STRIP }}
      FEATURES: ${{ matrix.FEATURES }}
    steps:
      - uses: actions/checkout@v2
      - name: 设置编译环境
        if: ${{ matrix.TARGET != 'x86_64-unknown-freebsd' }}
        run: |
          case $TARGET in 
            mipsel-unknown-linux-musl)
              MUSL_URI=mipsel-linux-musl-cross
              ;;
            aarch64-unknown-linux-musl)
              MUSL_URI=aarch64-linux-musl-cross
              ;;
            armv7-unknown-linux-musleabihf)
              MUSL_URI=armv7l-linux-musleabihf-cross
              ;;
            armv7-unknown-linux-musleabi)
              MUSL_URI=armv7m-linux-musleabi-cross
              ;;
            arm-unknown-linux-musleabihf)
              MUSL_URI=arm-linux-musleabihf-cross
              ;;
            arm-unknown-linux-musleabi)
              MUSL_URI=arm-linux-musleabi-cross
              ;;
            mips-unknown-linux-musl)
              MUSL_URI=mips-linux-musl-cross
              ;;
          esac
            echo "MUSL_URI=${MUSL_URI}" >> $GITHUB_ENV
            mkdir -p /opt/musl_gcc 
            wget -c https://github.com/lmq8267/Toolchain/releases/download/musl-cross/$MUSL_URI.tgz -P /opt/musl_gcc/
            tar zxf /opt/musl_gcc/$MUSL_URI.tgz -C /opt/musl_gcc/
            sudo ln -s /opt/musl_gcc/$MUSL_URI/bin/*gcc /usr/bin/
          if [[ $TARGET == mips-unknown-linux-musl ]] || [[ $TARGET == mipsel-unknown-linux-musl ]] ; then
          rustup install 1.72.1
          rustup default 1.72.1
          fi
          if [[ $TARGET =~ "x86_64-unknown-linux-musl" ]] ; then
            sudo apt-get update && sudo apt-get install -qq musl-tools
          fi
          sudo timedatectl set-timezone "Asia/Shanghai"
          cat >>~/.cargo/config <<EOF
          [target.x86_64-unknown-linux-musl]
          rustflags = ["-C", "target-feature=+crt-static","-C", "strip=symbols"]
          [target.aarch64-unknown-linux-musl]
          linker = "aarch64-linux-musl-gcc"
          rustflags = ["-C", "target-feature=+crt-static","-C", "strip=symbols"]
          [target.armv7-unknown-linux-musleabihf]
          linker = "armv7l-linux-musleabihf-gcc"
          rustflags = ["-C", "target-feature=+crt-static","-C", "strip=symbols"]
          [target.armv7-unknown-linux-musleabi]
          linker = "armv7m-linux-musleabi-gcc"
          rustflags = ["-C", "target-feature=+crt-static","-C", "strip=symbols"]
          [target.arm-unknown-linux-musleabihf]
          linker = "arm-linux-musleabihf-gcc"
          rustflags = ["-C", "target-feature=+crt-static","-C", "strip=symbols"]
          [target.arm-unknown-linux-musleabi]
          linker = "arm-linux-musleabi-gcc"
          rustflags = ["-C", "target-feature=+crt-static","-C", "strip=symbols"]
          [target.mipsel-unknown-linux-musl]
          linker = "mipsel-linux-musl-gcc"
          rustflags = ["-C", "target-feature=+crt-static","-C", "strip=symbols"]
          [target.mips-unknown-linux-musl]
          linker = "mips-linux-musl-gcc"
          rustflags = ["-C", "target-feature=+crt-static","-C", "strip=symbols"]  
          EOF
      - name: 添加编译平台
        run: rustup target add $TARGET
      - name: 开始编译
        if: ${{ matrix.TARGET != 'x86_64-unknown-freebsd' }}
        run: |
          git clone https://github.com/vnt-dev/vnts -b ${{ needs.check.outputs.ver }} /opt/vnts
          cd /opt/vnts
          tar -czf ./WEB_static.tar.gz static
          cargo build --release --target $TARGET --features $FEATURES
      - name: 编译FreeBSD
        if: ${{ matrix.TARGET == 'x86_64-unknown-freebsd' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu qemu-user-static binfmt-support build-essential
          git clone https://github.com/vnt-dev/vnts -b ${{ needs.check.outputs.ver }} /opt/vnts
          cd /opt/vnts
          cargo install cross --git https://github.com/cross-rs/cross
          sed -i 's/const CLOCK_ID: ClockId = ClockId::CLOCK_BOOTTIME;/const CLOCK_ID: ClockId = ClockId::CLOCK_MONOTONIC;/g' ./lib/boringtun/src/sleepyinstant/unix.rs
          cross build --target $TARGET --release --features $FEATURES
      - name: 安装 UPX
        if: ${{ matrix.TARGET != 'x86_64-unknown-freebsd' }}
        uses: crazy-max/ghaction-upx@v3
        with:
          version: v4.2.4
          install-only: true
      - name: 打包压缩
        run: |
          mkdir -p /opt/upx
          mv /opt/vnts/target/${TARGET}/release/vnts /opt/upx/${NAME}
          if [[ $TARGET != "x86_64-unknown-linux-musl" && $TARGET != "x86_64-unknown-freebsd" ]] ; then
           chmod 777 /opt/musl_gcc/${{ env.MUSL_URI }}/bin/${STRIP}
           cd /opt/upx
           /opt/musl_gcc/${{ env.MUSL_URI }}/bin/${STRIP} ${NAME}
           upx --lzma --best ${NAME}
           [[ $TARGET == mips-unknown-linux-musl ]] && cp -rf /opt/vnts/WEB_static.tar.gz /opt/upx/WEB_static.tar.gz
          fi
          echo "build_time=$(date '+%Y年%m月%d日%H:%M:%S' | jq -sRr @uri)" >> $GITHUB_ENV
      - name: 发布
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.c8 }}
          body: |
            > ### ![](https://img.shields.io/badge/%E7%BC%96%E8%AF%91%E6%97%B6%E9%97%B4-${{ env.build_time }}-8267?logo=github&labelColor=%E9%A1%BB)![](https://img.shields.io/github/downloads/${{ github.repository }}/${{ needs.check.outputs.ver }}/total?label=%E4%B8%8B%E8%BD%BD%E6%AC%A1%E6%95%B0&logo=github)![](https://img.shields.io/docker/image-size/lmq8267/vnts/${{ needs.check.outputs.ver }}?label=%E9%95%9C%E5%83%8F%E5%A4%A7%E5%B0%8F&link=https%3A%2F%2Fhub.docker.com%2Fr%2Flmq8267%2Fvnts&logo=docker) 
            
            这是各平台的压缩版程序
            
            -musleabi：只支持软件浮点的设备
            -musleabihf：支持硬件浮点的设备
            
            mips不支持web管理！
            
            [官方更新说明](https://github.com/vnt-dev/vnts/releases)
            
          tag_name: ${{ needs.check.outputs.ver }}
          files: |
            /opt/upx/*
      # MODIFIED: Removed stray '-' that was here
      - name: 删除工作流
        uses: GitRML/delete-workflow-runs@main
        with:
          token: ${{ secrets.c8 }}
          retain_days: 2
          keep_minimum_runs: 1

  # MODIFIED: Indented this entire block to be a job under the 'jobs:' key
  keepalive-workflow:
    # github超过60天未提交将自动停止工作流
    name: 工作流保活 
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: 检查上次提交日期
        id: check_commit_date
        run: |
          # 获取上次提交日期（格式：YYYY-MM-DD）
          LAST_COMMIT_DATE=$(git log -1 --format=%cd --date=short)
          echo "上次提交日期: $LAST_COMMIT_DATE"
          # 计算当前日期和上次提交日期的差值（单位：天）
          LAST_COMMIT_TIMESTAMP=$(date -d "$LAST_COMMIT_DATE" +%s)
          CURRENT_TIMESTAMP=$(date +%s)
          DIFF_DAYS=$(( (CURRENT_TIMESTAMP - LAST_COMMIT_TIMESTAMP) / 86400 ))
          echo "距离上次提交以来的天数: $DIFF_DAYS"
          echo "diff_days=$DIFF_DAYS" >> $GITHUB_ENV
      - name: 执行空提交
        if: ${{ env.diff_days > 50 }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # 创建空提交
          git commit --allow-empty -m "自动空提交，保持仓库活跃"
          git push
